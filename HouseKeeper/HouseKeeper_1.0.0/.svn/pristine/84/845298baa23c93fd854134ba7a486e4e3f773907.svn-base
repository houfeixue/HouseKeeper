//
//  LKLoginViewModel.m
//  HouseKeeper
//
//  Created by sunny on 2018/7/18.
//  Copyright © 2018年 heshenghui. All rights reserved.
//

#import "LKLoginViewModel.h"

@implementation LKLoginViewModel
- (instancetype)init
{
    self = [super init];
    if (self) {
        [self initBindData];
    }
    return self;
}
- (void)initBindData {
    _loginSuccessSubject = [RACSubject subject];
    _verifyCodeSuccessSubject = [RACSubject subject];
    _enableLoginSignal = [RACSignal combineLatest:@[RACObserve(self.loginModel, userName),RACObserve(self.loginModel, password)] reduce:^id _Nonnull(NSString *userName, NSString *password){
        if (self.loginModel.isQuickLogin) {
            return @(userName.length && password.length >= 4);
        }else
        return @(userName.length && password.length >= 6);
    }];
    _loginBtnColorSignal = [RACSignal combineLatest:@[RACObserve(self.loginModel, userName),RACObserve(self.loginModel, password)] reduce:^id _Nonnull(NSString *userName, NSString *password){
        if (self.loginModel.isQuickLogin) {
            if (userName.length && password.length >= 4) {
                return LKBlackColor;
            }
            return LKDisableBtnColor;
        }else {
            if (userName.length && password.length >= 6) {
                return LKBlackColor;
            }
            return LKDisableBtnColor;
        }
    }];
    @weakify(self)
    [[RACObserve(self, requestDict) ignore:nil] subscribeNext:^(NSDictionary * requestDict) {
        @strongify(self)
        [self requestUrl:self.requestUrl withData:requestDict withRequestType:RequestType_Post withTag:self.requestTag];
    }];
    [self.requestViewModelOKSubject subscribeNext:^(NSArray *resultArray) {
        
        NSNumber *tag = [resultArray objectAtIndex:0];
        NSDictionary *requestJson = [LKCustomMethods dictionaryWithJsonString:[resultArray objectAtIndex:1]];
        int successResult = [[requestJson numberForKey:@"status"] intValue];
        if ( successResult == 1) {
            if ([tag isEqualToNumber:@(3)]) { /// 验证码获取
                [self.verifyCodeSuccessSubject sendNext:nil];
            }else {
                NSString * data = [LKEntcry decryptAES:[requestJson objectForKey:@"data"]];
                id  dataDict = [LKCustomMethods dictionaryWithJsonString:data];
                if (dataDict != nil && [dataDict isKindOfClass:[NSDictionary class]]) {
                    @strongify(self);
//                    if ([tag isEqualToNumber: @(1)]) { /// 密码登录
                        LKUserInfoModel * model = [LKUserInfoModel mj_objectWithKeyValues:(NSDictionary *)dataDict];
                        [LKCustomMethods saveUserInfo:model];
                        [LKCustomMethods showView:nil withMessage:@"登录成功"];
                        [self.loginSuccessSubject sendNext:model];
//                    }else if ([tag isEqualToNumber:@(2)]) { /// 验证码登录
//                        [self.loginSuccessSubject sendNext:@(2)];
//                    }
                }else {
                    [LKCustomMethods showWindowMessage:[requestJson objectForKey:@"msg"]];
                }
            }
        }else {
            [LKCustomMethods showWindowMessage:[requestJson objectForKey:@"msg"]];
        }
    }];
    
    [self.requestViewModelErrorSubject subscribeNext:^(NSArray *errorArray) {
        NSError *error = [errorArray objectAtIndex:1];
        NSLog(@"%@",error.localizedDescription);
    }];
}

- (LKLoginModel *)loginModel {
    if (_loginModel == nil) {
        _loginModel = [[LKLoginModel alloc] init];
    }
    return _loginModel;
}
@end
